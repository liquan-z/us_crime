#highcharter::renderHighchart({
clus <-   subset(cluster_map,year==2005)
cat_1 <- clus %>% filter(cluster_number == 1)
cat_2 <- clus %>% filter(cluster_number == 2)
cat_3 <- clus %>% filter(cluster_number == 3)
cat_4 <- clus %>% filter(cluster_number == 4)
cat_5 <- clus %>% filter(cluster_number == 5)
cat_6 <- clus %>% filter(cluster_number == 6)
map <- download_map_data("countries/us/us-all")
hc <- highchart(type = "map") %>%
hc_title(text = "Clustering Mapping")%>%
hc_plotOptions(map = list(
allAreas = FALSE,
joinBy = c("hc-a2", "State"),
mapData = map
)) %>%
hc_add_series(name = "1", data = cat_1, color = "#A1A1A1") %>%
hc_add_series(name = "2", data = cat_2, color = "#46BEC8") %>%
hc_add_series(name = "3", data = cat_3, color = "#0000CD") %>%
hc_add_series(name = "4", data = cat_4, color = "#4AC6B7") %>%
hc_add_series(name = "5", data = cat_5, color = "#1972A4") %>%
hc_add_series(name = "6", data = cat_6, color = "#965F8A")
#})
hc
clus <- shiny::reactive({
subset(cluster_map,year==input$sYears)
})
#highcharter::renderHighchart({
clus <-   subset(cluster_map,year==2005)
cat_1 <- clus %>% filter(cluster_number == 1)
cat_2 <- clus %>% filter(cluster_number == 2)
cat_3 <- clus %>% filter(cluster_number == 3)
cat_4 <- clus %>% filter(cluster_number == 4)
cat_5 <- clus %>% filter(cluster_number == 5)
cat_6 <- clus %>% filter(cluster_number == 6)
map <- download_map_data("countries/us/us-all")
highchart(type = "map") %>%
hc_plotOptions(series = list(allAreas = F)) %>%
hc_colorAxis(max = 6) %>%
hc_add_series_map(map = usgeojson,
df = cat_1,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_2,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_3,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_4,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_5,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_6,
joinBy = c("woename", "State"),
value = "cluster_number")
#})
clus <- shiny::reactive({
subset(cluster_map,year==input$sYears)
})
#highcharter::renderHighchart({
clus <-   subset(cluster_map,year==2005)
cat_1 <- clus %>% filter(cluster_number == 1)
cat_2 <- clus %>% filter(cluster_number == 2)
cat_3 <- clus %>% filter(cluster_number == 3)
cat_4 <- clus %>% filter(cluster_number == 4)
cat_5 <- clus %>% filter(cluster_number == 5)
cat_6 <- clus %>% filter(cluster_number == 6)
map <- download_map_data("countries/us/us-all")
highchart(type = "map") %>%
hc_title(text = "Violent Crime Rates by US State")%>%
hc_plotOptions(series = list(allAreas = F)) %>%
hc_colorAxis(max = 6) %>%
hc_add_series_map(map = usgeojson,
df = cat_1,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_2,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_3,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_4,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_5,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_6,
joinBy = c("woename", "State"),
value = "cluster_number")
#})
colors <- c('#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
clus <- shiny::reactive({
subset(cluster_map,year==input$sYears)
})
#highcharter::renderHighchart({
clus <-   subset(cluster_map,year==2006)
cat_1 <- clus %>% filter(cluster_number == 1)
cat_2 <- clus %>% filter(cluster_number == 2)
cat_3 <- clus %>% filter(cluster_number == 3)
cat_4 <- clus %>% filter(cluster_number == 4)
cat_5 <- clus %>% filter(cluster_number == 5)
cat_6 <- clus %>% filter(cluster_number == 6)
map <- download_map_data("countries/us/us-all")
colors <- c('#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951',"#46BEC8")
highchart(type = "map") %>%
hc_title(text = "Violent Crime Rates by US State")%>%
hc_plotOptions(series = list(allAreas = F)) %>%
#hc_colorAxis(max = 6) %>%
hc_colorAxis(minColor = "#4AC6B7", maxColor = "#46BEC8", stops = color_stops(n=length(colors), colors = colors)) %>%
hc_add_series_map(map = usgeojson,
df = cat_1,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_2,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_3,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_4,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_5,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_6,
joinBy = c("woename", "State"),
value = "cluster_number")
#})
clus <- shiny::reactive({
subset(cluster_map,year==input$sYears)
})
#highcharter::renderHighchart({
clus <-   subset(cluster_map,year==2006)
cat_1 <- clus %>% filter(cluster_number == 1)
cat_2 <- clus %>% filter(cluster_number == 2)
cat_3 <- clus %>% filter(cluster_number == 3)
cat_4 <- clus %>% filter(cluster_number == 4)
cat_5 <- clus %>% filter(cluster_number == 5)
cat_6 <- clus %>% filter(cluster_number == 6)
map <- download_map_data("countries/us/us-all")
colors <- c('#46BEC8','#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
highchart(type = "map") %>%
hc_title(text = "Violent Crime Rates by US State")%>%
hc_plotOptions(series = list(allAreas = F)) %>%
hc_colors(c('#46BEC8','#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')) %>%
hc_colorAxis(max = 6) %>%
hc_add_series_map(map = usgeojson,
df = cat_1,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_2,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_3,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_4,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_5,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_6,
joinBy = c("woename", "State"),
value = "cluster_number")
#})
clus <- shiny::reactive({
subset(cluster_map,year==input$sYears)
})
#highcharter::renderHighchart({
clus <-   subset(cluster_map,year==2006)
cat_1 <- clus %>% filter(cluster_number == 1)
cat_2 <- clus %>% filter(cluster_number == 2)
cat_3 <- clus %>% filter(cluster_number == 3)
cat_4 <- clus %>% filter(cluster_number == 4)
cat_5 <- clus %>% filter(cluster_number == 5)
cat_6 <- clus %>% filter(cluster_number == 6)
map <- download_map_data("countries/us/us-all")
colors <- c('#46BEC8','#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
highchart(type = "map") %>%
hc_title(text = "Violent Crime Rates by US State")%>%
hc_plotOptions(series = list(allAreas = F)) %>%
hc_colors(c('#46BEC8','#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')) %>%
hc_colorAxis(color_stops()) %>%
hc_add_series_map(map = usgeojson,
df = cat_1,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_2,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_3,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_4,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_5,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_6,
joinBy = c("woename", "State"),
value = "cluster_number")
#})
clus <- shiny::reactive({
subset(cluster_map,year==input$sYears)
})
#highcharter::renderHighchart({
clus <-   subset(cluster_map,year==2006)
cat_1 <- clus %>% filter(cluster_number == 1)
cat_2 <- clus %>% filter(cluster_number == 2)
cat_3 <- clus %>% filter(cluster_number == 3)
cat_4 <- clus %>% filter(cluster_number == 4)
cat_5 <- clus %>% filter(cluster_number == 5)
cat_6 <- clus %>% filter(cluster_number == 6)
map <- download_map_data("countries/us/us-all")
colors <- c('#46BEC8','#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
highchart(type = "map") %>%
hc_title(text = "Violent Crime Rates by US State")%>%
hc_plotOptions(series = list(allAreas = F)) %>%
#  hc_colors(c('#46BEC8','#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')) %>%
hc_colorAxis(color_stops(n = 6, colors = c('#46BEC8','#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951'))) %>%
hc_add_series_map(map = usgeojson,
df = cat_1,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_2,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_3,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_4,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_5,
joinBy = c("woename", "State"),
value = "cluster_number") %>%
hc_add_series_map(map = usgeojson,
df = cat_6,
joinBy = c("woename", "State"),
value = "cluster_number")
#})
data_in <- shiny::reactive({
subset(df,year==input$sYears)
})
shiny::renderPlot({
#    ggplot(data = data_in(),mapping=aes(x=x,y=y,group=group,fill=values))+ geom_polygon(color = "gray90", size = 0.1)
map_data("us") %>%
group_by(cluster_number) %>%
plot_mapbox(x = ~x, y = ~y, color = I("black")) %>%
add_polygons() %>%
layout(
mapbox = list(center = list(lat = ~median(lat), lon = ~median(long)))
)
})
cluster <- read.csv("../../code/state_map_code/sample_for_cluster.csv")
cluster$number <- as.factor(cluster$cluster_number)
slope <- 2.666051223553066e-04
cluster$size <- sqrt(cluster$population * slope)
cluster <- cluster[order(cluster$year, cluster$region,cluster$cluster_number),]
###########Clustering Map Dataset Preparation
#Delete district of columbia
cluster_map <- cluster %>%
filter(region != 'district of columbia')
#Delete puerto rico
cluster_map <- cluster_map %>%
filter(region != 'puerto rico')
#table(cluster_map$region)
STATES <-c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA",
"HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA",
"MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"UT", "VT", "VA", "WA", "WV", "WI", "WY")
State <- rep(STATES,15)
# Combine
cluster_map <- as.data.frame(cbind(cluster_map,State))
#================
nfactor = length(levels(cluster_map$number))
foo <- brewer.pal(n = nfactor,name = "Set1")
names(foo) = levels(cluster_map$number)
Z_Breaks = function(n){
CUTS = seq(0,1,length.out=n+1)
rep(CUTS,ifelse(CUTS %in% 0:1,1,6))
}
colorScale <- data.frame(z=Z_Breaks(nfactor),
col=rep(foo,each=2),stringsAsFactors=FALSE)
cluster <- read.csv("../../code/state_map_code/sample_for_cluster.csv")
cluster$cluster_number <- as.factor(cluster$cluster_number)
slope <- 2.666051223553066e-04
cluster$size <- sqrt(cluster$population * slope)
cluster <- cluster[order(cluster$year, cluster$region,cluster$cluster_number),]
###########Clustering Map Dataset Preparation
#Delete district of columbia
cluster_map <- cluster %>%
filter(region != 'district of columbia')
#Delete puerto rico
cluster_map <- cluster_map %>%
filter(region != 'puerto rico')
#table(cluster_map$region)
STATES <-c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA",
"HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA",
"MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"UT", "VT", "VA", "WA", "WV", "WI", "WY")
State <- rep(STATES,15)
# Combine
cluster_map <- as.data.frame(cbind(cluster_map,State))
#================
nfactor = length(levels(cluster_map$cluster_number))
foo <- brewer.pal(n = nfactor,name = "Set1")
library(flexdashboard)
library(shiny)
library(tidyverse)
library(plotly)
library(ggplot2)
library(sp)
library(dplyr)
library(highcharter)
library(viridisLite)
library(crosstalk)
foo <- brewer.pal(n = nfactor,name = "Set1")
library("colorspace")
foo <- brewer.pal(n = nfactor,name = "Set1")
brewer.pal
foo <- brewer.pal(n = nfactor,name = "Set1")
install.packages("RColorBrewer")
library("RColorBrewer")
foo <- brewer.pal(n = nfactor,name = "Set1")
names(foo) = levels(cluster_map$cluster_number)
Z_Breaks = function(n){
CUTS = seq(0,1,length.out=n+1)
rep(CUTS,ifelse(CUTS %in% 0:1,1,6))
}
colorScale <- data.frame(z=Z_Breaks(nfactor),
col=rep(foo,each=2),stringsAsFactors=FALSE)
colorScale <- data.frame(z=Z_Breaks(nfactor),
col=rep(foo,each=2),stringsAsFactors=FALSE)
CUTS = seq(0,1,length.out=n+1)
rep(CUTS,ifelse(CUTS %in% 0:1,1,2))
Z_Breaks = function(n){
CUTS = seq(0,1,length.out=n+1)
rep(CUTS,ifelse(CUTS %in% 0:1,1,2))
}
colorScale <- data.frame(z=Z_Breaks(nfactor),
col=rep(foo,each=2),stringsAsFactors=FALSE)
View(colorScale)
View(colorScale)
foo <- brewer.pal(n = nfactor,name = "Set1")
foo
cluster <- read.csv("../../code/state_map_code/sample_for_cluster.csv")
cluster$cluster_number <- as.ordered(cluster$cluster_number)
View(cluster)
cluster <- read.csv("../../code/state_map_code/sample_for_cluster.csv")
View(cluster)
View(cluster_map)
View(crimeDat)
uscrimedata <- readRDS("../../code/state_map_code/crime1995-2019.rds")
View(uscrimedata)
uscrimedata <- readRDS("../../code/state_map_code/crime1995-2019.rds")
Dat <- readRDS("../../code/state_map_code/usacrimeDat.rds")
View(Dat)
uscrimedata <- readRDS("../../code/state_map_code/crime1995-2019.rds")
View(uscrimedata)
uscrimedata <- readRDS("../../code/state_map_code/crime1995-2019.rds")
Dat <- uscrimedata %>% spread(Crime,rate)
library(flexdashboard)
library(shiny)
library(tidyverse)
library(plotly)
library(ggplot2)
library(sp)
library(dplyr)
library(highcharter)
library(viridisLite)
library(crosstalk)
Dat <- readRDS("../../code/state_map_code/usacrimeDat.rds")
uscrimedata <- readRDS("../../code/state_map_code/crime1995-2019.rds")
Dat <- uscrimedata %>% spread(Crime,rate)
myState <- as.character(unique(crimeDat$State))
kState <- as.character(unique(Dat$state))
View(crimeDat)
Trend <- readRDS("../../code/state_map_code/crime1995-2019.rds")
myState <- as.character(unique(Trend$State))
Trend <- readRDS("../../code/state_map_code/crime1995-2019.rds")
myState <- as.character(unique(Trend$state))
View(Trend)
Trend <- readRDS("../../code/state_map_code/crime1995-2019.rds")
myState <- as.character(unique(Trend$state))
# make crime types as column
Trend1 <- Trend %>% spread(Crime,rate)
View(Trend1)
View(Trend1)
table(Trend1$state)
str(Trend1)
myState
# make crime types as column
Trend1 <- Trend %>% spread(Crime,rate)
r <- as.data.frame(Year=2010,state="puerto rico",population="1e+05",report_type="rate",assault=86.7,burglary =466.8,larceny_theft=770.9, murder=22.5,rape=1.6,robbery=153.6,vehicle_theft=172.2)
r <- as.data.frame(x=Year=2010,state="puerto rico", population="1e+05",report_type="rate",assault=86.7,burglary =466.8,larceny_theft=770.9, murder=22.5,rape=1.6,robbery=153.6,vehicle_theft=172.2)
r <- as.data.frame(Year=2010,state="puerto rico", population="1e+05",report_type="rate",assault=86.7,burglary =466.8,larceny_theft=770.9, murder=22.5,rape=1.6,robbery=153.6,vehicle_theft=172.2)
r <- as.data.frame(c(Year=2010,state="puerto rico", population="1e+05",report_type="rate",assault=86.7,burglary =466.8,larceny_theft=770.9, murder=22.5,rape=1.6,robbery=153.6,vehicle_theft=172.2))
View(r)
r <- as.data.frame(Year <- 2010,
state <- "puerto rico",
population <- "1e+05",
report_type <- "rate",
assault <- 86.7,
burglary <- 466.8,
larceny_theft <- 770.9,
murder <- 22.5,
rape <- 1.6,
robbery <- 153.6,
vehicle_theft <- 172.2)
r <- as.data.frame(Year <- c(2010),
state <- c("puerto rico"),
population <- c("1e+05"),
report_type <- c("rate"),
assault <- c(86.7),
burglary <- c(466.8),
larceny_theft <- c(770.9),
murder <- c(22.5),
rape <- c(1.6),
robbery <- c(153.6),
vehicle_theft <- c(172.2))
r <- as.data.frame(c(Year <- c(2010),
state <- c("puerto rico"),
population <- c("1e+05"),
report_type <- c("rate"),
assault <- c(86.7),
burglary <- c(466.8),
larceny_theft <- c(770.9),
murder <- c(22.5),
rape <- c(1.6),
robbery <- c(153.6),
vehicle_theft <- c(172.2)))
View(r)
#Delete puerto rico
Trend2 <- Trend1 %>%
filter(state != 'puerto rico')
table(Trend2$state)
names(Trend2) <- c("Year","state","population","report type","assault"
,"burglary","larceny theft","murder","rape","robbery"
,"vehicle theft")
str(Trend1)
View(crimeDat)
str(crimeDat)
c <- readRDS("../../code/state_map_code/crime1999-2019.rds")
c <- readRDS("../../code/state_map_code/crime1999-2019.rds")
c <- readRDS("../../code/state_map_code/crime1995-2019.rds")
View(c)
View(cluster)
View(Trend1)
crimeDat <- readRDS("../../code/state_map_code/usacrimeDat.rds")
View(crimeDat)
install.packages('rsconnect')
install.packages("rsconnect")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='liz19009',
token='A77D1E5DC0C879C8F65218FC7CDED575',
secret='<SECRET>')
rsconnect::setAccountInfo(name='liz19009',token='A77D1E5DC0C879C8F65218FC7CDED575',secret='<SECRET>')
rsconnect::setAccountInfo(name='liz19009',
token='A77D1E5DC0C879C8F65218FC7CDED575',
secret='edahlHw5vr6A1v8Xw11VXKkIntlto7I26rPsYJZj')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
library(rsconnect)
rsconnect::deployApp('../../code/state_map_code/usCrime.rmd')
library(rsconnect)
rsconnect::deployApp('../../code/state_map_code')
library(rsconnect)
rsconnect::deployApp('../../code/state_map_code/usCrime.rmd')
n
library(rsconnect)
rsconnect::deployApp('../../code/state_map_code/usCrime_copy.rmd')
state.name
