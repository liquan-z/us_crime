cluster_model <- function(year_num){
# read the data
data <- readRDS("crime_cluster.rds")
# get prepared of cluster for each year
data_cluster <- data[data$year==year_num,]
# remove year column
data_cluster <- data_cluster[,c('state','property_crime','violent_crime')]
# calculate the distance
C <- chol(var(data_cluster[-1]))
y <- as.matrix(data_cluster[-1]) %*% solve(C)
# decide the number of clusters to choose
# wssplot <- function(data,nc=15,seed=1234){
#   wss <- (nrow(data)-1)*sum(apply(data,2,var))
#   for (i in 2:nc){
#     set.seed(seed)
#     wss[i] <- sum(kmeans(data,centers=i)$withinss)
#   }
#   plot(1:nc,wss,type='b',xlab='# of clusters',ylab='Within SS')
# }
#
# # plot the number of cluster
# wssplot(y)
# use another method to decide number of clusters
library(NbClust)
set.seed(1234)
nc <- NbClust(y,min.nc=2,max.nc = 20,method='kmeans')
# barplot(table(nc$Best.n[1,]),xlab='# of clusters',ylab='# of criteria')
# get the best number of clusters
centers_num <- length(unique(nc$Best.partition))
# do clustering
cluster2 <- kmeans(y,centers = centers_num)
data_cluster$predict <- factor(cluster2$cluster)
# rename state as region
names(data_cluster)[1] <- 'region'
return(data_cluster)
}
data_cluster <- cluster_model(2019)
library(maps)
library(ggplot2)
library(mapproj)
cluster_plot_map <- function(data_in){
# plot the cluster result in map
# use map library to get longitude and latitude of US
us_states <- map_data("state")
map_dat <- merge(us_states,data_cluster,by='region')
p <- ggplot(data = map_dat,
mapping = aes(x = long, y = lat,
group = group, fill = predict))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
guides(fill = FALSE)
}
cluster_plot_scatter <- function(data_in){
# plot the scatter plot
ggplot(data=data_cluster,aes(x=property_crime,y=violent_crime,color=predict,shape=predict))+
geom_point() + ggtitle('clustering result')
}
# read the data
crime_df1999 <- read.csv('../data/1995-2019_reorganized_data/crime_1999.csv',header = T)
# read the data
crime_df1999 <- read.csv('../data/1995-2019_reorganized_data/crime_1999.csv',header = T)
# read the data
crime_df1999 <- read.csv('../../data/1995-2019_reorganized_data/crime_1999.csv',header = T)
# get preparation of the data
# drop the index column (first column)
crime_df1999 <- subset(crime_df1999,select = -X)
# select the state total and total rows
t_crime_df1999 <- crime_df1999[grepl('Total',crime_df1999$area) & crime_df1999$report_type=='rate',
c('state','crime_type','number')]
# make crime types as column
library(tidyverse)
t_crime_df1999 <- t_crime_df1999 %>% spread(crime_type,number)
# partition cluster 2 features
crime_df1999_2 <- t_crime_df1999[,c('state','property_crime','violent_crime')]
# decide the number of cluster to choose
wssplot <- function(data,nc=15,seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data,centers=i)$withinss)
}
plot(1:nc,wss,type='b',xlab='# of clusters',ylab='Within SS')
}
# remove state name column for clustering
wssplot(crime_df1999_2[-1])  # choose cluster number as 2
# another method for choosing cluster number
library(NbClust)
set.seed(1234)
nc <- NbClust(crime_df1999_2[-1],min.nc=2,max.nc = 20,method='kmeans')
barplot(table(nc$Best.n[1,]),xlab='# of clusters',ylab='# of criteria') # choose cluster number as 2
# k-means cluster
cluster2 <- kmeans(crime_df1999_2[-1],centers=2)
crime_df1999_2$predict <- factor(cluster2$cluster)
crime_df1999_2$state <- tolower(crime_df1999_2$state)
names(crime_df1999_2)[1] <- 'region'
# use map library to get longitude and latitude of US
library(maps)
us_states <- map_data("state")
map_dat <- merge(us_states,crime_df1999_2,by='region')
library(ggplot2)
library(mapproj)
p <- ggplot(data = map_dat,
mapping = aes(x = long, y = lat,
group = group, fill = predict))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
guides(fill = FALSE)
ggplot(data=crime_df1999_2,aes(x=property_crime,y=violent_crime,color=predict,shape=predict))+
geom_point() + ggtitle('clustering result')
crime_df1999_7 <- t_crime_df1999[,c("state","assault","burglary","larceny_theft","murder","rape","robbery","vehicle_theft")]
wssplot <- function(data,nc=15,seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data,centers=i)$withinss)
}
plot(1:nc,wss,type='b',xlab='# of clusters',ylab='Within SS')
}
wssplot(scale(crime_df1999_7[-1]))
library(NbClust)
nc=NbClust(crime_df1999_7[-1],min.nc=2,max.nc = 20,method='kmeans')
barplot(table(nc$Best.n[1,]),xlab='# of clusters',ylab='# of criteria')
cluster7 = kmeans(crime_df1999_7[-1],centers=2)
crime_df1999_7$predict = cluster7$cluster
crime_df1999_7$state = tolower(crime_df1999_7$state)
names(crime_df1999_7)[1] = 'region'
us_states <- map_data("state")
map_dat <- merge(us_states,crime_df1999_7,by='region')
p <- ggplot(data = map_dat,
mapping = aes(x = long, y = lat,
group = group, fill = predict))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
guides(fill = FALSE)
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/gapminderDataFiveYear.csv")
View(data)
cluster <- read.csv("../../code/state_map_code/sample_for_cluster")
cluster_model <- function(year_num){
# read the data
data <- readRDS("crime_cluster.rds")
# get prepared of cluster for each year
data_cluster <- data[data$year==year_num,]
# remove year and population column
year_col <- data_cluster$year
population_col <- data_cluster$population
data_cluster <- data_cluster[,c('state','property_crime','violent_crime')]
# calculate the distance
C <- chol(var(data_cluster[-1]))
y <- as.matrix(data_cluster[-1]) %*% solve(C)
# decide the number of clusters to choose
wssplot <- function(data,nc=15,seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data,centers=i)$withinss)
}
plot(1:nc,wss,type='b',xlab='# of clusters',ylab='Within SS')
}
# plot the number of cluster
wssplot(y)
# use another method to decide number of clusters
library(NbClust)
set.seed(1234)
nc <- NbClust(y,min.nc=2,max.nc = 10,method='kmeans')
barplot(table(nc$Best.n[1,]),xlab='# of clusters',ylab='# of criteria')
# get the best number of clusters
centers_num <- length(unique(nc$Best.partition))
# do clustering
cluster2 <- kmeans(y,centers = centers_num,nstart = 10)
data_cluster$predict <- factor(cluster2$cluster)
# rename state as region
names(data_cluster)[1] <- 'region'
data_cluster <- data.frame(year_col,population_col,data_cluster)
return(data_cluster)
}
library(maps)
library(mapproj)
library(usmap)
library(Hmisc)
library(ggplot2)
cluster_plot_52map <- function(data_in){
# plot the cluster result in map
# capitalize the first letter of regions
data_in$region <- Hmisc::capitalize(data_in$region)
# use map library to get longitude and latitude of US
us_states <- data.frame(region=data_in$region,values=data_in$predict)
# rename region as states
names(us_states)[1] <- 'state'
names(data_in)[3] <- 'state'
df <- map_with_data(us_states,na=0)
# map_dat <- merge(df,data_in,by='state')
p <- ggplot(data = df,mapping=aes(x=x,y=y,group=group,fill=values))
p + geom_polygon(color = "gray90", size = 0.1)
}
cluster_plot_scatter <- function(data_in){
# plot the scatter plot
ggplot(data=data_cluster,aes(x=property_crime,y=violent_crime,color=predict,shape=predict))+
geom_point() + ggtitle('clustering result')
}
# do cluster
df_list <- lapply(2005:2019, cluster_model)
# map from 2005 to 2019
cluster_plot_52map(df_list[[1]])
cluster_plot_52map(df_list[[2]])
cluster_plot_52map(df_list[[3]])
cluster_plot_52map(df_list[[4]])
cluster_plot_52map(df_list[[5]])
cluster_plot_52map(df_list[[6]])
cluster_plot_52map(df_list[[7]])
cluster_plot_52map(df_list[[8]])
cluster_plot_52map(df_list[[9]])
cluster_plot_52map(df_list[[10]])
cluster_plot_52map(df_list[[11]])
cluster_plot_52map(df_list[[12]])
cluster_plot_52map(df_list[[13]])
cluster_plot_52map(df_list[[14]])
cluster_plot_52map(df_list[[15]])
# read the data
data <- readRDS("crime_cluster.rds")
# get prepared of cluster for each year
data_cluster <- data[data$year==year_num,]
cluster_model <- function(year_num){
# read the data
data <- readRDS("crime_cluster.rds")
# get prepared of cluster for each year
data_cluster <- data[data$year==year_num,]
# remove year and population column
year_col <- data_cluster$year
population_col <- data_cluster$population
data_cluster <- data_cluster[,c('state','property_crime','violent_crime')]
# calculate the distance
C <- chol(var(data_cluster[-1]))
y <- as.matrix(data_cluster[-1]) %*% solve(C)
# decide the number of clusters to choose
wssplot <- function(data,nc=15,seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data,centers=i)$withinss)
}
plot(1:nc,wss,type='b',xlab='# of clusters',ylab='Within SS')
}
# plot the number of cluster
wssplot(y)
# use another method to decide number of clusters
library(NbClust)
set.seed(1234)
nc <- NbClust(y,min.nc=2,max.nc = 10,method='kmeans')
barplot(table(nc$Best.n[1,]),xlab='# of clusters',ylab='# of criteria')
# get the best number of clusters
centers_num <- length(unique(nc$Best.partition))
# do clustering
cluster2 <- kmeans(y,centers = centers_num,nstart = 10)
data_cluster$predict <- factor(cluster2$cluster)
# rename state as region
names(data_cluster)[1] <- 'region'
data_cluster <- data.frame(year_col,population_col,data_cluster)
return(data_cluster)
}
library(maps)
library(mapproj)
library(usmap)
library(Hmisc)
library(ggplot2)
cluster_plot_52map <- function(data_in){
# plot the cluster result in map
# capitalize the first letter of regions
data_in$region <- Hmisc::capitalize(data_in$region)
# use map library to get longitude and latitude of US
us_states <- data.frame(region=data_in$region,values=data_in$predict)
# rename region as states
names(us_states)[1] <- 'state'
names(data_in)[3] <- 'state'
df <- map_with_data(us_states,na=0)
# map_dat <- merge(df,data_in,by='state')
p <- ggplot(data = df,mapping=aes(x=x,y=y,group=group,fill=values))
p + geom_polygon(color = "gray90", size = 0.1)+
geom_sf_label(aes(label = Abbr), label.padding = unit(1, "mm"))
}
# divide function two
cluster_data_52map <- function(data_in){
# plot the cluster result in map
# capitalize the first letter of regions
data_in$region <- Hmisc::capitalize(data_in$region)
# use map library to get longitude and latitude of US
us_states <- data.frame(region=data_in$region,values=data_in$predict)
# rename region as states
names(us_states)[1] <- 'state'
names(data_in)[3] <- 'state'
df <- map_with_data(us_states,na=0)
return(df)
}
# do cluster
df_list <- lapply(2005:2019, cluster_model)
sample_for_cluster <- rbind(df_list[[1]],df_list[[2]],df_list[[3]],df_list[[4]]
,df_list[[5]],df_list[[6]],df_list[[7]],df_list[[8]]
,df_list[[9]],df_list[[10]],df_list[[11]],df_list[[12]]
,df_list[[13]],df_list[[14]],df_list[[15]]                            )
names(sample_for_cluster) <- c('year','population','region','property_crime'
,'violent_crime','cluster_number')
df_for_map_1 <- cluster_data_52map(df_list[[1]])
df_for_map_1
cluster_data_52map(df_list[[1]])
cluster_plot_scatter <- function(data_in){
# plot the scatter plot
ggplot(data=data_cluster,aes(x=property_crime,y=violent_crime,color=predict,shape=predict))+
geom_point() + ggtitle('clustering result')
}
cluster_plot_52map <- function(data_in){
# plot the cluster result in map
# capitalize the first letter of regions
data_in$region <- Hmisc::capitalize(data_in$region)
# use map library to get longitude and latitude of US
us_states <- data.frame(region=data_in$region,values=data_in$predict)
# rename region as states
names(us_states)[1] <- 'state'
names(data_in)[3] <- 'state'
df <- map_with_data(us_states,na=0)
# map_dat <- merge(df,data_in,by='state')
p <- ggplot(data = df,mapping=aes(x=x,y=y,group=group,fill=values))
p + geom_polygon(color = "gray90", size = 0.1)+
geom_sf_label(aes(label = Abbr), label.padding = unit(1, "mm"))
}
# do cluster
df_list <- lapply(2005:2019, cluster_model)
df_for_map_1 <- cluster_data_52map(df_list[[1]])
df_for_map_1
